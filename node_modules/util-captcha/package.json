{
  "name": "util-captcha",
  "description": "node验证码模块，包含图片验证码和文字验证码，支持redis和session存储",
  "version": "2.1.0",
  "homepage": "http://gitlab.umiit.cn/node/util-captcha",
  "author": {
    "name": "xiejun",
    "email": "xiejun@umiit.cn"
  },
  "repository": {
    "type": "git",
    "url": "http://gitlab.umiit.cn/node/util-captcha.git"
  },
  "bugs": {
    "url": "http://gitlab.umiit.cn/node/util-captcha/issues"
  },
  "main": "lib/captcha",
  "engines": {
    "node": ">= 0.12.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~1.0.0",
    "grunt": "~0.4.5"
  },
  "keywords": [],
  "publishConfig": {
    "registry": "http://m2.umiit.cn/content/repositories/npm-umi/"
  },
  "license": "MIT",
  "dependencies": {
    "gm": "^1.17.0",
    "moment": "^2.12.0"
  },
  "gitHead": "c02cf584d84f747d4cb905236610e561989d8982",
  "readme": "# util-captcha\n\nnode验证码模块，包含图片验证码和文字验证码，支持redis和session存储\n\n## Getting Started\nInstall the module with: `npm install util-captcha`\n\n+ 如果使用图片验证码，必须安装ghostscript imagemagick graphicsmagick.\n\n```\nosx: brew install ghostscript imagemagick graphicsmagick\nlinux: apt-get install ghostscript imagemagick graphicsmagick\n```\n\n+ 如果使用redis进行存储，请安装 `npm install redis`\n\n## Documentation\n验证码有以下2类:\n\n+ 图片验证码，nodejs生成图片通过图片链接传输到web页面中，由用户输入图片中的文字通过http传输到nodejs，由nodejs来判断有效性\n   \n   ```\n   var captcha = require('util-captcha'); //引入\n\n   //生成图片方法一，存入session中，失效时间为30分钟 (**主要用在非rest的项目中**)\n   router.get('/pic_cc', captcha.mid_pic_session(30));\n\n   //生成图片方法二，存入redis中,失效时间30分钟，必须传入参数redis的client，以及唯一识别的key(比如手机号)\n   //(**主要用在rest的项目，因为没有session**)\n   router.get('/pic_cc', captcha.mid_pic_redis(client, key, 30));\n\n   //生成图片方法三，采用非中间件的函数，直接调用生成图片的函数，自由决定如何存储信息 (**不建议使用，除非很了解如何保证时效性**)\n   captcha.create_pic(text, writeStream, fn);\n\n   //判断是否有效\n   // client: 可以是redis的client或者req(取决于你生成图片采用的存储机制，比如保持一致)\n   // value: 通过http传回来需要验证的值\n   // type: 类型，如注册register\n   // key: 如果是redis,需要传入识别字段，比如手机号，如果是session,就是null\n   // fn:  如果是redis,需要传入回调函数, 回调函数的第二个参数就是是否验证通过的结果值，如果采用session，函数的返回值就是是否验证通过的结果值\n   captcha.valid_pic(client, value, type, key, fn);\n   ```\n\n+ 文字验证码，主要是生成文字通过短信方式发送给用户，由用户输入短信验证码通过http传输到nodejs,由nodejs来判断有效性\n\n  ```\n  var captcha = require('util-captcha'); //引入\n\n  //生成文字方法一，存入session中，失效时间为30分钟 (**主要用在非rest的项目中**)\n  /**\n   * @param  {Function} fn       回调函数，通常在里面进行短信发送，然后根据短信发送情况返回数据\n   * @param  {Number}   len      短信数字的长度(默认为6)\n   * @param  {Number}   expires  过期时间(默认为30分钟)\n   * @param  {String}\t_code    如果传入code，不再生成，只是存储到session\n   */\n  router.get('/text_cc', captcha.mid_text_session(fn, len, expires, _code));\n\n\n  //生成文字方法二，存入redis中，失效时间为30分钟 (**主要用在rest的项目中**)\n  /**\n   * @param  {Function}      fn       回调函数，通常在里面进行短信发送，然后根据短信发送情况返回数据\n   * @param  {redisClient}   client   redis客户端连接\n   * @param  {String}        key      识别字段，比如手机号\n   * @param  {Number}        len      短信数字的长度(默认为6)\n   * @param  {Number}   \t expires  过期时间(默认为30分钟)\n   * @param  {String}\t  \t _code    如果传入code，不再生成，只是存储到redis\n   */\n  router.get('/text_cc', captcha.mid_text_redis(fn, client, key, len, expires, _code));\n\n  //判断是否有效\n  // client: 可以是redis的client或者req(取决于你生成图片采用的存储机制，比如保持一致)\n  // value: 通过http传回来需要验证的值\n  // type: 类型，如注册register\n  // key: 如果是redis,需要传入识别字段，比如手机号，如果是session,就是null\n  // fn:  如果是redis,需要传入回调函数, 回调函数的第二个参数就是是否验证通过的结果值，如果采用session，函数的返回值就是是否验证通过的结果值\n  captcha.valid_text(client, value, type, key, fn);\n  ```\n\n\n## Examples\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2016 xiejun",
  "readmeFilename": "README.md",
  "_id": "util-captcha@2.1.0",
  "scripts": {},
  "_shasum": "30128aeeb4832b44159b6d621d8969eb3dc8fd42",
  "_from": "util-captcha@*",
  "_npmVersion": "2.14.1",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "umi",
    "email": "ci@umiit.cn"
  },
  "maintainers": [
    {
      "name": "umi",
      "email": "ci@umiit.cn"
    }
  ],
  "dist": {
    "shasum": "30128aeeb4832b44159b6d621d8969eb3dc8fd42",
    "tarball": "http://m2.umiit.cn/content/groups/npm/util-captcha/-/util-captcha-2.1.0.tgz"
  },
  "_resolved": "http://m2.umiit.cn/content/groups/npm/util-captcha/-/util-captcha-2.1.0.tgz"
}
